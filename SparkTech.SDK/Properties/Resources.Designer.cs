//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SparkTech.SDK.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SparkTech.SDK.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  &quot;asheq&quot;,
        ///  &quot;caitlynentrapment&quot;,
        ///  &quot;camilleq2&quot;,
        ///  &quot;camilleq&quot;,
        ///  &quot;dariusnoxiantacticsonh&quot;,
        ///  &quot;elisespiderw&quot;,
        ///  &quot;fiorae&quot;,
        ///  &quot;gravesmove&quot;,
        ///  &quot;garenq&quot;,
        ///  &quot;gangplankqwrapper&quot;,
        ///  &quot;illaoiw&quot;,
        ///  &quot;jaycehypercharge&quot;,
        ///  &quot;jaxempowertwo&quot;,
        ///  &quot;kaylee&quot;,
        ///  &quot;luciane&quot;,
        ///  &quot;leonashieldofdaybreakattack&quot;,
        ///  &quot;leonashieldofdaybreak&quot;,
        ///  &quot;mordekaisermaceofspades&quot;,
        ///  &quot;monkeykingdoubleattack&quot;,
        ///  &quot;meditate&quot;,
        ///  &quot;masochism&quot;,
        ///  &quot;netherblade&quot;,
        ///  &quot;nautiluspiercinggaze&quot;,
        ///  &quot;nasusq&quot;,
        ///  &quot;powerfist&quot;,
        ///  &quot;rengarqemp&quot;,
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AttackResets {
            get {
                return ResourceManager.GetString("AttackResets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  &quot;caitlynheadshotmissile&quot;,
        ///  &quot;itemtitanichydracleave&quot;,
        ///  &quot;itemtiamatcleave&quot;,
        ///  &quot;kennenmegaproc&quot;,
        ///  &quot;masteryidoublestrike&quot;,
        ///  &quot;quinnwenhanced&quot;,
        ///  &quot;renektonsuperexecute&quot;,
        ///  &quot;renektonexecute&quot;,
        ///  &quot;trundleq&quot;,
        ///  &quot;viktorqbuff&quot;,
        ///  &quot;xinzhaoqthrust1&quot;,
        ///  &quot;xinzhaoqthrust2&quot;,
        ///  &quot;xinzhaoqthrust3&quot;
        ///].
        /// </summary>
        internal static string Attacks {
            get {
                return ResourceManager.GetString("Attacks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Banner {
            get {
                object obj = ResourceManager.GetObject("Banner", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;en&quot;: {
        ///    &quot;text&quot;: &quot;Soon™® [Spark]&quot;
        ///  },
        ///  &quot;zh&quot;: {
        ///    &quot;text&quot;: &quot;??&quot; 
        ///  } 
        ///}.
        /// </summary>
        internal static string Evade {
            get {
                return ResourceManager.GetString("Evade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;en&quot;: {
        ///    &quot;text&quot;: &quot;Ported L# [Spark]&quot;
        ///  },
        ///  &quot;zh&quot;: {
        ///    &quot;text&quot;: &quot;??&quot;
        ///  },
        ///  &quot;windup&quot;: {
        ///    &quot;en&quot;: {
        ///      &quot;text&quot;: &quot;Extra windup time&quot;,
        ///      &quot;helpText&quot;: &quot;Windup time is broscience, i will find a way to\nget rid of this in the future&quot;
        ///    },
        ///    &quot;zh&quot;: {
        ///      &quot;text&quot;: &quot;??&quot;
        ///    }
        ///  }
        ///}.
        /// </summary>
        internal static string HealthPrediction {
            get {
                return ResourceManager.GetString("HealthPrediction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;en&quot;: {
        ///    &quot;text&quot;: &quot;SparkTech.SDK&quot;,
        ///    &quot;helpText&quot;: &quot;Here you will find all the settings that impact other scripts&quot;
        ///  },
        ///  &quot;zh&quot;: {
        ///    &quot;text&quot;: &quot;Spark制作&quot;,
        ///    &quot;helpText&quot;: &quot;帮助&quot;
        ///  },
        ///  &quot;language&quot;: {
        ///    &quot;en&quot;: {
        ///      &quot;text&quot;: &quot;Language&quot;
        ///    },
        ///    &quot;zh&quot;: {
        ///      &quot;text&quot;: &quot;语言 (language)&quot;
        ///    }
        ///  },
        ///  &quot;modes&quot;: {
        ///    &quot;en&quot;: {
        ///      &quot;text&quot;: &quot;Modes&quot;,
        ///      &quot;helpText&quot;: &quot;All the settings besides key are champion-specific&quot;
        ///    },
        ///    &quot;zh&quot;: {
        ///      &quot;text&quot;: &quot;CHINESE PPL PLS TRANSLATE TY&quot;
        ///    },        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MainMenu {
            get {
                return ResourceManager.GetString("MainMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;key&quot;: {
        ///    &quot;en&quot;: {
        ///      &quot;text&quot;: &quot;Activation key&quot;
        ///    },
        ///    &quot;zh&quot;: {
        ///      &quot;text&quot;: &quot;??&quot;
        ///    }
        ///  },
        ///  &quot;champSpells&quot;: {
        ///    &quot;en&quot;: {
        ///      &quot;text&quot;: &quot;Spell usage on champs&quot;,
        ///      &quot;options&quot;: [
        ///        &quot;Don&apos;t use spells&quot;,
        ///        &quot;Poke spells only&quot;,
        ///        &quot;All spells&quot;
        ///      ]
        ///    }
        ///  },
        ///  &quot;champAuto&quot;: {
        ///    &quot;en&quot;: {
        ///      &quot;text&quot;: &quot;Autoattack champions&quot; 
        ///    } 
        ///  },
        ///  &quot;minions&quot;: {
        ///    &quot;en&quot;: {
        ///      &quot;text&quot;: &quot;Minions&quot;,
        ///      &quot;options&quot;: [
        ///        &quot;Don&apos;t attack&quot;,
        ///        &quot;Lasthit&quot;,        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Mode {
            get {
                return ResourceManager.GetString("Mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;en&quot;: {
        ///    &quot;text&quot;: &quot;{module}&quot;
        ///  },
        ///  &quot;zh&quot;: {
        ///    &quot;text&quot;: &quot;{module}&quot;
        ///  },
        ///  &quot;picker&quot;: {
        ///    &quot;en&quot;: {
        ///      &quot;text&quot;: &quot;Selected {module}&quot;,
        ///      &quot;helpText&quot;: &quot;{module} will be changed immediately&quot;
        ///    },
        ///    &quot;zh&quot;: {
        ///      &quot;text&quot;: &quot;ZH- Selected {module}&quot;,
        ///      &quot;helpText&quot;: &quot;ZH- {module} will be changed immediately&quot;
        ///    } 
        ///  } 
        ///}.
        /// </summary>
        internal static string Module {
            get {
                return ResourceManager.GetString("Module", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///  &quot;asheqattacknoonhit&quot;,
        ///  &quot;annietibbersbasicattack&quot;,
        ///  &quot;annietibbersbasicattack2&quot;,
        ///  &quot;bluecardattack&quot;,
        ///  &quot;dravenattackp_r&quot;,
        ///  &quot;dravenattackp_rc&quot;,
        ///  &quot;dravenattackp_rq&quot;,
        ///  &quot;dravenattackp_l&quot;,
        ///  &quot;dravenattackp_lc&quot;,
        ///  &quot;dravenattackp_lq&quot;,
        ///  &quot;elisespiderlingbasicattack&quot;,
        ///  &quot;gravesbasicattackspread&quot;,
        ///  &quot;gravesautoattackrecoil&quot;,
        ///  &quot;goldcardattack&quot;,
        ///  &quot;heimertyellowbasicattack&quot;,
        ///  &quot;heimertyellowbasicattack2&quot;,
        ///  &quot;heimertbluebasicattack&quot;,
        ///  &quot;heimerdingerwattack2&quot;,
        ///  &quot;heimerdingerwattack2ult&quot;,
        ///  &quot;i [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NoAttacks {
            get {
                return ResourceManager.GetString("NoAttacks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;en&quot;: {
        ///    &quot;text&quot;: &quot;Not implemented&quot;
        ///  },
        ///  &quot;zh&quot;: {
        ///    &quot;text&quot;: &quot;??&quot; 
        ///  } 
        ///}.
        /// </summary>
        internal static string NullChampion {
            get {
                return ResourceManager.GetString("NullChampion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;en&quot;: {
        ///    &quot;text&quot;:  &quot;SparkWalker&quot; 
        ///  },
        ///  &quot;zh&quot;: {
        ///	&quot;text&quot;: &quot;??&quot;
        ///  },
        ///  &quot;drawings&quot;: {
        ///	&quot;en&quot;: {
        ///		&quot;text&quot;: &quot;Drawings&quot;
        ///	},
        ///	&quot;zh&quot;: {
        ///		&quot;text&quot;: &quot;??&quot;
        ///	},
        ///	&quot;playerRange&quot;: {
        ///		&quot;en&quot;: {
        ///			&quot;text&quot;: &quot;Show your AutoAttack range&quot;
        ///		},
        ///		&quot;zh&quot;: {
        ///			&quot;text&quot;: &quot;??&quot;
        ///		}
        ///	},
        ///	&quot;enemy&quot;: {
        ///		&quot;en&quot;: {
        ///			&quot;text&quot;: &quot;Show enemies&apos; AA ranges&quot;
        ///		},
        ///		&quot;zh&quot;: {
        ///			&quot;text&quot;: &quot;??&quot;
        ///		},
        ///		&quot;alone&quot;: {
        ///			&quot;en&quot;: {
        ///				&quot;text&quot;: &quot;No enemy heroes detected&quot;
        ///			},
        ///			&quot;zh&quot;: {
        ///				&quot;text&quot;: &quot;??&quot;
        ///			}
        ///	}
        ///	},
        ///	&quot;minions&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Orbwalker {
            get {
                return ResourceManager.GetString("Orbwalker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Picker {
            get {
                object obj = ResourceManager.GetObject("Picker", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] RenderEffectCompiled {
            get {
                object obj = ResourceManager.GetObject("RenderEffectCompiled", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;en&quot;: {
        ///    &quot;keySelector&quot;: &quot;Press now...&quot;,
        ///    &quot;firstTimeWelcome&quot;: &quot;Welcome to {platform}!\nEnglish language detected.\nYou can change that from within the menu.&quot;,
        ///    &quot;platformHasNoTheme&quot;: &quot;provides no theme&quot;,
        ///    &quot;loaderHeader&quot;: &quot;No new scripts detected&quot;,
        ///    &quot;loaderContent&quot;: &quot;In case of malfunctioning,\nplease make sure to put the .dll in\n%appdata%/SparkTech.SDK/Scripts&quot;,
        ///	&quot;licenseUnlicensed&quot;: &quot;You are currently unlicensed&quot;,
        ///	&quot;licenseLifetime&quot;: &quot;You are using a lifetime license&quot;,
        ///	&quot;licenseS [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Strings {
            get {
                return ResourceManager.GetString("Strings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;en&quot;: {
        ///    &quot;text&quot;: &quot;Weights [Spark]&quot;,
        ///	&quot;helpText&quot;: &quot;Early access version; not really that good ATM :(&quot;
        ///  },
        ///  &quot;zh&quot;: {
        ///    &quot;text&quot;: &quot;??&quot; 
        ///  },
        ///  &quot;timeToKill&quot;: {
        ///    &quot;en&quot;: {
        ///      &quot;text&quot;: &quot;Time to kill&quot;
        ///    }
        ///  },
        ///  &quot;distancePlayer&quot;: {
        ///    &quot;en&quot;: {
        ///      &quot;text&quot;: &quot;Distance to player&quot;
        ///    }
        ///  },
        ///  &quot;distanceMouse&quot;: {
        ///    &quot;en&quot;: {
        ///      &quot;text&quot;: &quot;Distance to mouse&quot;
        ///    }
        ///  },
        ///  &quot;dealsMostDmg&quot;: {
        ///    &quot;en&quot;: {
        ///      &quot;text&quot;: &quot;Deals most damage&quot; 
        ///    } 
        ///  }
        ///}.
        /// </summary>
        internal static string TargetSelector {
            get {
                return ResourceManager.GetString("TargetSelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;en&quot;: {
        ///    &quot;text&quot;: &quot;Built-in utilities&quot;,
        ///    &quot;helpText&quot;: &quot;All the goodies, just a click away!&quot;
        ///  },
        ///  &quot;zh&quot;: {
        ///    &quot;text&quot;: &quot;??&quot;,
        ///    &quot;helpText&quot;: &quot;??&quot;
        ///  },
        ///  &quot;active&quot;: {
        ///    &quot;en&quot;: {
        ///      &quot;text&quot;: &quot;Enabled utilities&quot;
        ///    },
        ///    &quot;zh&quot;: {
        ///      &quot;text&quot;: &quot;??&quot;
        ///    },
        ///    &quot;activator&quot;: {
        ///      &quot;en&quot;: {
        ///        &quot;text&quot;: &quot;Enable activator&quot;
        ///      },
        ///      &quot;zh&quot;: {
        ///        &quot;text&quot;: &quot;??&quot;
        ///      }
        ///    },
        ///    &quot;indicator&quot;: {
        ///      &quot;en&quot;: {
        ///        &quot;text&quot;: &quot;Enable damage indicators&quot;
        ///      },
        ///      &quot;z [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Utilities {
            get {
                return ResourceManager.GetString("Utilities", resourceCulture);
            }
        }
    }
}
